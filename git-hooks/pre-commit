#!/bin/sh
# If someone has a simpler, yet equally powerful, idea, please send it to
# me (mic at inofix.ch).

# always find the version here..
version_file=version.txt
# send a copy to PyPI setup.py
setup_file=setup.py

if ! git describe >/dev/null 2>&1 ; then
    echo "This project has no version info yet! Use 'git tag -a <version>' to start versioning.."
    exit 1
fi

if ! git diff --quiet HEAD ; then
    # something has changed in the repository
    if git diff --quiet ; then
        # this means all changes were added

        new_version=`git describe`
        old_version=`grep "^Git Version: .*$" $version_file | awk '{print $3}'`

        if [ "$new_version" != "$old_version" ] ; then

            i=0
            for v in `echo $new_version | tr "-" " "` ; do
                eval "v_$i=$v"
                i=$(($i+1))
            done

            pypi_version="$v_0"

            if [ -n "$v_1" && -n "$v_2" ] ; then
                pypi_version="$v_0.dev$v_1+$v_2"
            fi

            echo "Something has changed, count up the version to $new_version ($pypi_version resp.)"

            sed -i 's;^Git Version: .*$;Real Version: '${new_version}';' $version_file
            sed -i 's;^PyPI Version: .*$;Official Version: '${pypi_version}';' $version_file
            git add $version_file
            sed -i "s;    version='.*',;    version='${pypi_version}',;" $setup_file
            git add $setup_file
        fi
    fi
fi

